{"version":3,"sources":["webpack://battleship/./src/index.ts","webpack://battleship/webpack/startup"],"names":["container","document","getElementById","rotated","previousMoves","CreateShip","length","shipName","HP","name","getName","getHP","fullHeal","hit","isSunk","getCoordinates","id","coordinates","spot","parseInt","i","push","changeUI","text","querySelector","innerText","CreateGameBoard","grids","querySelectorAll","printID","leftSide","Array","from","keys","board","map","grid","arg","toString","fleet","carrier","battleship","cruiser","submarine","destroyer","fleetPlaced","placeFleet","count","some","co","Number","isNaN","forEach","gameOver","Object","values","every","player1","player2","rotateShip","ships","getElementsByClassName","arr","prototype","slice","call","style","flexDirection","ship","className","classList","remove","add","margin","checkSunk","player","checkHit","displayBattleUI","life","firstElementChild","color","nextElementSibling","changeLife","enemy","display","checkGameOver","takeTurn","coordinate","gridAttackedDOM","markAttack","moves","index","result","getProbability","shipLeft","probability","player3","oddsHorizontal","x","oddsVertical","spreadHits","nearbySpaces","reduce","a","e","concat","random","Math","floor","focusHits","findIndex","getLastMove","hunt","shipsFound","shipsLeft","warships","playerBoard","AIBoard","AIGrids","rotateButton","restartButton","validMove","shipID","currentPosition","dragstart","target","dataTransfer","setData","warship","addEventListener","preventDefault","boardTarget","currentTarget","data","getData","dropShip","removeShip","shipContainer","player2Board","first","placeFleetRandom","gameStart","convertEvent","move","freeSpots","indexOf","indexLeft","indexFound","splice","highestSpots","max","highestProbability","AIPlay","playGame"],"mappings":"wXAEMA,EAAYC,SAASC,eAAe,iBAEtCC,GAAU,EAERC,EAAuB,GAE7B,SAASC,EAAWC,EAAgBC,GAClC,IAAIC,EAAKF,EACHG,EAAOF,EACb,MAAO,CACLG,QAAA,WACE,OAAOD,GAETE,MAAA,WACE,OAAOH,GAETI,SAAQ,WACNJ,EAAKF,GAEPO,IAAA,WACEL,GAAM,GAERM,OAAA,WACE,OAAIN,GAAM,IAMhB,SAASO,EAAeC,EAAYV,GAClC,IAAMW,EAAc,GACdC,EAAOC,SAASH,EAAI,IAC1B,IAAKb,EACH,IAAK,IAAIiB,EAAI,EAAGA,EAAId,EAAQc,GAAK,EAC/BH,EAAYI,KAAKH,EAAOE,GAG5B,GAAIjB,EACF,IAASiB,EAAIF,EAAME,EAAIF,EAAgB,GAATZ,EAAac,GAAK,GAC9CH,EAAYI,KAAKD,GAGrB,OAAOH,EAGT,SAASK,EAASC,GACLtB,SAASuB,cAAc,MAC/BC,UAAYF,EAkBjB,SAASG,EAAgBjB,IAfzB,WAEE,IADA,IAAMkB,EAAQ1B,SAAS2B,iBAAiB,SAC/BR,EAAI,EAAGA,EAAIO,EAAMrB,OAAQc,GAAK,EACrCO,EAAMP,GAAGJ,GAAK,GAAGI,EAanBS,GACA,IAAMC,EAAWC,MAAMC,KAAKD,MAAM,KAAKE,QAGjCC,GADK,YAATzB,EAAqBqB,EAASK,KAAI,SAACC,GAAS,OAAAA,EAAO,OAAON,GACrCK,KAAI,SAACE,GAAQ,OAAAA,EAAIC,cAClCC,EAAQ,CACZC,QAASnC,EAAW,EAAG,WACvBoC,WAAYpC,EAAW,EAAG,cAC1BqC,QAASrC,EAAW,EAAG,WACvBsC,UAAWtC,EAAW,EAAG,aACzBuC,UAAWvC,EAAW,EAAG,cAErBwC,EAAwB,GAC9B,MAAO,CACLpC,KAAI,EACJ8B,MAAK,EACLM,YAAW,EACXX,MAAK,EACLY,WAAA,SAAW7B,EAAuBV,GAChC,IAAMwC,EAAQ,GAAK9B,EAAYX,OAC/B,SACGH,GACDc,EAAY+B,MAAK,SAACC,GAAO,OAAAA,EAAK,IAAO,GAAKA,IAAOhC,EAAY,OAI3Dd,GAAWc,EAAY,GAAK8B,EAAQ,GAAK,KAEzC9B,EAAY+B,MAAK,SAACC,GAAO,OAAAC,OAAOC,MAAMhC,SAASe,EAAMe,GAAK,SAI5DhC,EAAY+B,MACV,SAACC,GAAE,MAAK,MAAsD,OAAhB,QAAtC,EAAAhD,SAASC,eAAe+C,EAAGX,mBAAW,eAAEb,gBAKpDR,EAAYmC,SAAQ,SAACH,GACnBf,EAAMe,GAAM1C,KAEdsC,EAAYxB,KAAKJ,EAAYX,QACtB,KAET+C,SAAA,WACE,QAAIC,OAAOC,OAAOhB,GAAOiB,OAAM,SAAC,GAAe,OAAA1C,EAAP,iBAM9C,IAAM2C,EAAU/B,EAAgB,WAC1BgC,EAAUhC,EAAgB,WAEhC,SAASiC,IACP,GAAK3D,EAAL,CACA,IAAM4D,EAAQ5D,aAAS,EAATA,EAAW6D,uBAAuB,WAC1CC,EAAM/B,MAAMgC,UAAUC,MAAMC,KAAKL,GACvC5D,EAAUkE,MAAMC,cACoB,QAAlCnE,EAAUkE,MAAMC,cAA0B,SAAW,MACvDL,EAAIV,SAAQ,SAACgB,GACPA,EAAKC,YAAc,WAAWD,EAAKpD,IACrCoD,EAAKE,UAAUC,OAAOH,EAAKpD,IAC3BoD,EAAKE,UAAUE,IAAOJ,EAAKpD,GAAE,WAC7BoD,EAAKF,MAAMO,OAAS,OACpBtE,GAAU,IAEViE,EAAKE,UAAUC,OAAUH,EAAKpD,GAAE,WAChCoD,EAAKE,UAAUE,IAAIJ,EAAKpD,IACxBb,GAAU,OAuDhB,SAASuE,EAAUC,EAAapE,GAC9B,QAAIoE,EAAOpC,MAAMhC,GAAUO,SAmB7B,SAAS8D,EAASD,EAAavC,GAU7B,OATIc,OAAOC,MAAMhC,SAASwD,EAAOzC,MAAME,GAAO,MAC5CuC,EAAOpC,MAAMoC,EAAOzC,MAAME,IAAOvB,MARrC,SAAyB8D,EAAavC,GAChCsC,EAAUC,EAAQA,EAAOzC,MAAME,IACjCd,EAAYqD,EAAOlE,KAAI,MAAM,CAACkE,EAAOzC,MAAME,IAAM,UAC9Cd,EAAYqD,EAAOlE,KAAI,MAAM,CAACkE,EAAOzC,MAAME,IAAM,aAMpDyC,CAAgBF,EAAQvC,GAlC5B,SAAoBtB,EAAiB,GAInC,I,MAJqCL,EAAI,OACrCqE,EACwC,QAA1C,EAAA7E,SAASC,eAAkBO,EAAI,mBAAW,eAAEsE,kBAEjB,WAAtBD,aAAI,EAAJA,EAAMZ,MAAMc,QACjBF,EAAoBA,aAAI,EAAJA,EAAMG,mBACxBnE,IACFgE,EAAKZ,MAAMc,MAAQ,SA4BnBE,CAAWR,EAAUC,EAAQA,EAAOzC,MAAME,IAAQuC,GAClDA,EAAOzC,MAAME,GAAQ,KApBzB,SAAuBuC,GACrB,IAAMQ,EAAwB,YAAhBR,EAAOlE,KAAqBiD,EAAUD,EAChDkB,EAAOtB,aACT/B,EAAY6D,EAAM1E,KAAI,UACtBR,SAASC,eAAe,WAAWgE,MAAMkB,QAAU,OACnDnF,SAASC,eAAe,WAAWgE,MAAMkB,QAAU,SAgBnDC,CAAcV,IAEdA,EAAOzC,MAAME,GAAQ,KAEhBuC,EAAOzC,MAAME,GAGtB,SAASkD,EACPX,EACAY,G,MAEA,GAAuD,OAAhB,QAAnC,EAAAtF,SAASC,eAAeqF,UAAW,eAAE9D,WAAmB,OAAO,EACnE,IAAM0D,EAAwB,YAAhBR,EAAOlE,KAAqBiD,EAAUD,EAC9CrB,EACY,YAAhBuC,EAAOlE,KACHU,SAASoE,EAAY,IAAM,IAC3BpE,SAASoE,EAAY,IAI3B,GAlEF,SAAoBvE,EAAY2D,EAAavC,GAC3C,IAAMoD,EAAkBvF,SAASC,eAAec,GAC3CwE,IACLA,EAAgB/D,UAAY,IAC5B+D,EAAgBtB,MAAMc,MAAQ9B,OAAOC,MAAMhC,SAASwD,EAAOzC,MAAME,GAAO,KACpE,MACA,SA0DJqD,CAAWF,EAAYJ,EAAO/C,GAE1BuC,IAAWjB,EAAS,CACtB,IAAMgC,EAAQ,CAAEC,MAAO,EAAGC,OAAQ,EAAGxB,KAAM,IAC3CsB,EAAMtB,KAAOe,EAAMjD,MAAME,GACzBsD,EAAME,OAAShB,EAASO,EAAO/C,GAC/BsD,EAAMC,MAAQvD,EACdhC,EAAciB,KAAKqE,QAEnBd,EAASO,EAAO/C,GAElB,OAAO,EAST,SAASyD,EAAe3D,EAAiB4D,G,QACjCC,EAAc,GACdC,EAAUtE,EAAgB,WAChCsE,EAAQ9D,MAAQ,EAAH,GAAOA,GACpB,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAAM5B,OAAQc,GAAK,EAAG,CAExC,IADA,IAAI6E,EAAiB,EACZC,EAAI,EAAGA,EAAIJ,EAASxF,OAAQ4F,GAAK,EAEtCF,EAAQlD,WAAW/B,EAAemB,EAAMd,GAAI0E,EAASI,GAAGvF,SAAU,OAElEsF,GAAkB,GAEmC,OAAhB,QAArC,EAAAhG,SAASC,eAAekB,EAAEkB,mBAAW,eAAEb,aACzCwE,EAAiB,GACnBF,EAAY1E,KAAK4E,GAGnB,IADA9F,GAAU,EACDiB,EAAI,EAAGA,EAAIc,EAAM5B,OAAQc,GAAK,EAAG,CACxC,IAAI+E,EAAe,EACnB,IAASD,EAAI,EAAGA,EAAIJ,EAASxF,OAAQ4F,GAAK,EAEtCF,EAAQlD,WAAW/B,EAAemB,EAAMd,GAAI0E,EAASI,GAAGvF,SAAU,OAElEwF,GAAgB,GAEqC,OAAhB,QAArC,EAAAlG,SAASC,eAAekB,EAAEkB,mBAAW,eAAEb,aACzC0E,EAAe,GACjBJ,EAAY3E,IAAM+E,EAGpB,OADAhG,GAAU,EACH4F,EAGT,SAASK,EAAWT,EAAezD,GACjC,IAAMmE,EAAenE,EAAMoE,QACzB,SAACC,EAAGC,EAAGpF,GACL,OAAAoF,KAAOb,EAAQ,IAAIrD,YACnBkE,KAAOb,EAAQ,IAAIrD,YACnBkE,KAAOb,EAAQ,GAAGrD,YAClBkE,KAAOb,EAAQ,GAAGrD,WACdiE,EAAEE,OAAOrF,EAAEkB,YACXiE,IACN,IAEIG,EAASC,KAAKC,MAAMD,KAAKD,SAAWL,EAAa/F,QACvD,OAA4B,IAAxB+F,EAAa/F,OACR,KAEF+F,EAAaK,GAGtB,SAASG,EAAU3E,EAAiB3B,GAElC,OADoB2B,EAAM4E,WAAU,SAACzE,GAAQ,OAAAA,IAAQ9B,KAIvD,SAASwG,EAAYpB,GACnB,OAAKvF,EAAcA,EAAcE,OAASqF,GACnCvF,EAAcA,EAAcE,OAASqF,GADa,KAI3D,IAAIqB,GAAO,EACPC,EAAuB,GACvBC,EAAY5D,OAAOrB,KAAKwB,EAAQlB,OAAOJ,KAAI,SAACE,GAAQ,OAAAoB,EAAQlB,MAAMF,MAuItE,IA0BQ8E,EACAC,EACAC,EACAC,EACAC,EACAC,EACFC,EAhCFC,EAAS,GACTC,EAAkB,GAEtB,SAASC,EAAUpB,G,MACXqB,EAASrB,EAAEqB,OACjBH,EAASG,EAAO7G,GACF,QAAd,EAAAwF,EAAEsB,oBAAY,SAAEC,QAAQ,OAAQF,aAAM,EAANA,EAAQxD,WAoBlC8C,EAAWlH,SAAS2B,iBAA8B,YAClDwF,EAAcnH,SAASuB,cAA2B,cAElD8F,EAAUD,OADVA,EAAUpH,SAASC,eAAe,sBACjB,EAAPmH,EAASzF,iBAAiB,SACpC2F,EAAetH,SAASuB,cAAc,UACtCgG,EAAgBvH,SAASC,eAAe,WAC1CuH,GAAY,EAEhBN,EAAS/D,SAAQ,SAAC4E,GAChB,OAAAA,EAAQC,iBAAiB,YAAaL,MAExCR,WAAaa,iBAAiB,YAAY,SAACzB,GAAM,OAAAA,EAAE0B,oBACnDd,WAAaa,iBAAiB,QAAQ,SAACzB,G,MAC/BqB,EAASrB,EAAEqB,OACJpE,EAAQX,WACnB/B,EAAe8G,EAAO7G,GAAyB,QAArB,EAAAyC,EAAQlB,MAAMmF,UAAO,eAAE/G,SACjD+G,IAjCN,SAAkBlB,G,MACV2B,EAAc3B,EAAE4B,cACtBT,EAAkBQ,EAAYnH,GAE9B,IAAM6G,EAASrB,EAAEqB,OACXQ,EAAqB,QAAd,EAAA7B,EAAEsB,oBAAY,eAAEQ,QAAQ,QACrCT,EAAOxD,WAAa,IAAIgE,EAiCtBE,CAAS/B,GACTiB,GAAY,GAJVA,GAAY,KAMhBN,EAAS/D,SAAQ,SAAC4E,GAChB,OAAAA,EAAQC,iBAAiB,WAAW,SAACzB,GAC9BiB,IAnCX,SAAoBjB,GACM,qBAApBmB,IACWnB,EAAEqB,OACV3D,MAAMkB,QAAU,OACvBuC,EAAkB,IAgCda,CAAWhC,GA3VjB,WACE,GAtGM5C,EAAQ5D,aAAS,EAATA,EAAW4B,iBAAiB,YAC9BG,MAAMgC,UAAUC,MAAMC,KAAKL,GAC/BJ,OAAM,SAACY,GAAsB,MAAuB,SAAvBA,EAAKF,MAAMkB,WAoGhD,CAvGF,IACQxB,EAuGA6E,EAAgBxI,SAASC,eAAe,iBACxCwI,EAAezI,SAASC,eAAe,gBACxCuI,GAAkBC,IACvBD,EAAcvE,MAAMkB,QAAU,OAC9BsD,EAAaxE,MAAMkB,QAAU,OAzB/B,SAA0BT,GAExB,IADA,IAAMpC,EAAQ,EAAH,GAAQoC,EAAOpC,OACW,IAA9BoC,EAAO9B,YAAYvC,QAAc,CACtC,IAAMqI,EAAarF,OAAOC,OAAOhB,GAAO,GACxC,IAAKoG,EAAO,OACZ,IAAMjC,EAASC,KAAKC,MAAsB,IAAhBD,KAAKD,UAC3BA,EAAS,KAAIvG,GAAU,GAEzBwE,EAAO7B,WACL/B,EAAe2F,EAAOpE,WAAYqG,EAAMhI,SACxCgI,EAAMjI,mBAGD6B,EAAMe,OAAOrB,KAAKM,GAAO,IAElCpC,GAAU,GAWZyI,CAAiBlF,GACjBpC,EAAS,iBAoVLuH,UAGJvB,WAASlE,SAAQ,SAAChB,GAChB,OAAAA,EAAK6F,iBAAiB,SAAS,SAACzB,GAAM,OAlG1C,SAAkBA,GACZlB,EAAS7B,EAtKf,SAAsB+C,GACpB,IAAMqB,EAASrB,EAAEqB,OAEjB,OADoB1G,SAAS0G,EAAO7G,GAAI,IACrBsB,WAmKGwG,CAAatC,KAAKlB,EAAS5B,EA/FnD,W,4CACMqF,EACEC,EAAYvF,EAAQvB,MAAMC,KAAI,SAACE,GAGnC,MAFY,OAARA,GAAwB,OAARA,EAAoB,KAC7BoB,EAAQvB,MAAM+G,QAAQ5G,GAAKC,cAIxC,GAAuC,QAAnC,EAAAmB,EAAQlB,MAAoB,QAAd,EAAAwE,EAAY,UAAE,eAAE3C,aAAK,eAAEtD,SAAU,CACjD,IAAMoI,EAAYhC,EACf/E,KAAI,SAACE,GAAQ,OAAAA,EAAI3B,aACjBuI,QAAsB,QAAd,EAAAlC,EAAY,UAAE,eAAE3C,MACrB+E,EAAalC,EAAWgC,QAAQlC,EAAY,GAAG3C,MACrD8C,EAAUkC,OAAOF,EAAW,GAC5BjC,EAAWmC,OAAOD,EAAY,GACJ,IAAtBlC,EAAW3G,SACb0G,GAAO,EACPD,EAAY,GAAGnB,OAAS,MAI5B,IAAMyD,EAAe1C,KAAK2C,IAAG,MAAR3C,KAAYd,EAAemD,EAAW9B,IACrDqC,EAA+B1D,EACnCmD,EACA9B,GACAZ,QAAO,SAACC,EAAGC,EAAGpF,GAAM,OAACoF,IAAM6C,EAAe9C,EAAEE,OAAOrF,GAAKmF,IAAI,IACxDG,EAASC,KAAKC,MAAMD,KAAKD,SAAW6C,EAAmBjJ,QAiE7D,OA/DK0G,IACH+B,EAAOQ,EAAmB7C,IAGG,QAAb,QAAd,EAAAK,EAAY,UAAE,eAAEnB,UAClBoB,GAAO,EACHC,EAAWzD,OAAM,SAACY,GAAS,OAAAA,IAAS2C,EAAY,GAAG3C,SACrD6C,EAAW5F,KAAK0F,EAAY,GAAG3C,MACjC2E,EAAO3C,EAAWW,EAAY,GAAGpB,MAAOqD,IAGtChC,GAAmC,QAAb,QAAd,EAAAD,EAAY,UAAE,eAAEnB,UAC1BmD,EAAO3C,EAAWW,EAAY,GAAGpB,MAAOqD,IAGxChC,GAC2B,QAAb,QAAd,EAAAD,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,UAEhBmD,EAAO3C,EAAWW,EAAY,GAAGpB,MAAOqD,IAGxChC,GAC2B,QAAb,QAAd,EAAAD,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,UAEhBmD,EAAO3C,EAAWW,EAAY,GAAGpB,MAAOqD,IAIxChC,GAC2B,QAAb,QAAd,EAAAD,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,UAEhBmD,EAAO3C,EAAWW,EAAY,GAAGpB,MAAOqD,IAGxChC,GAC2B,QAAb,QAAd,EAAAD,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,UAEhBmD,EAAOlC,EAAUpD,EAAQvB,MAAO6E,EAAY,GAAG3C,OAE/C4C,GAC2B,QAAb,QAAd,EAAAD,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,UAEhBmD,EAAOlC,EAAUpD,EAAQvB,MAAO6E,EAAY,GAAG3C,QAEnC,IAAV2E,IAAaA,EAAO3C,EAAWW,EAAY,GAAIiC,IAGjD/B,EAAW3G,OAAS,GACO,QAAb,QAAd,EAAAyG,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,SACW,QAAb,QAAd,EAAAmB,EAAY,UAAE,eAAEnB,UAEhBmD,EAAOlC,EAAUpD,EAAQvB,MAAO+E,EAAW,KAExC8B,IAAkB,IAAVA,IAAaA,EAAOQ,EAAmB7C,IAE7CqC,EAAKzG,WAI8CkH,IAiGlBC,CAASjD,SAEjDe,WAAcU,iBAAiB,QAAStE,GACxC6D,WAAeS,iBAAiB,SAjGlC,WACE,IAAK,IAAI7G,EAAI,EAAGA,EAAIqC,EAAQvB,MAAM5B,OAAQc,GAAK,EAC7CqC,EAAQvB,MAAMd,GAAKA,EAAEkB,WACrBoB,EAAQxB,MAAMd,IAAMA,EAAI,KAAKkB,WAE/BgB,OAAOC,OAAOE,EAAQlB,OAAOa,SAAQ,SAACgB,GAAS,OAAAA,EAAKxD,cACpD0C,OAAOC,OAAOG,EAAQnB,OAAOa,SAAQ,SAACgB,GAAS,OAAAA,EAAKxD,cACpD6C,EAAQZ,YAAc,GACtBa,EAAQb,YAAc,GACtBmE,GAAO,EACPC,EAAa,GACbC,EAAY5D,OAAOrB,KAAKwB,EAAQlB,OAAOJ,KAAI,SAACE,GAAQ,OAAAoB,EAAQlB,MAAMF,MAElEpC,SAAS2B,iBAAiB,SAASwB,SAAQ,SAAChB,GAC1CA,EAAKiC,UAAY,OACjBjC,EAAK8B,MAAMc,MAAQ,OACnB5C,EAAKX,UAAY,MAEnBxB,SAAS2B,iBAAiB,YAAYwB,SAAQ,SAACgB,GAC7CA,EAAKF,MAAMkB,QAAU,WAEvBnF,SAAS2B,iBAAiB,SAASwB,SAAQ,SAAC0B,GAC1CA,EAAKZ,MAAMc,MAAQ,SAGgD,QAAjE/E,SAASC,eAAe,iBAAiBgE,MAAMC,eACjDR,IAEFrC,EAAS,oBACTrB,SAASC,eAAe,WAAWgE,MAAMkB,QAAU,OACnDnF,SAASC,eAAe,iBAAiBgE,MAAMkB,QAAU,OACzDnF,SAASC,eAAe,gBAAgBgE,MAAMkB,QAAU,OACxDnF,SAASC,eAAe,WAAWgE,MAAMkB,QAAU,aC/bjC,Q","file":"main.js","sourcesContent":["type Player = \"player1\" | \"player2\" | \"player3\";\n\nconst container = document.getElementById(\"shipContainer\");\n\nlet rotated = false;\n\nconst previousMoves: any[] = [];\n\nfunction CreateShip(length: number, shipName: string) {\n  let HP = length;\n  const name = shipName;\n  return {\n    getName(): string {\n      return name;\n    },\n    getHP(): number {\n      return HP;\n    },\n    fullHeal() {\n      HP = length;\n    },\n    hit(): void {\n      HP -= 1;\n    },\n    isSunk(): boolean {\n      if (HP <= 0) return true;\n      return false;\n    },\n  };\n}\n\nfunction getCoordinates(id: string, length: number) {\n  const coordinates = [];\n  const spot = parseInt(id, 10);\n  if (!rotated) {\n    for (let i = 0; i < length; i += 1) {\n      coordinates.push(spot + i);\n    }\n  }\n  if (rotated) {\n    for (let i = spot; i < spot + length * 10; i += 10) {\n      coordinates.push(i);\n    }\n  }\n  return coordinates;\n}\n\nfunction changeUI(text: string) {\n  const UI = document.querySelector(\"h2\");\n  UI.innerText = text;\n}\n\nfunction printID(): void {\n  const grids = document.querySelectorAll(\".grid\");\n  for (let i = 0; i < grids.length; i += 1) {\n    grids[i].id = `${i}`;\n  }\n}\n\nfunction checkReady() {\n  const ships = container?.querySelectorAll(\".warship\");\n  const arr = Array.prototype.slice.call(ships);\n  if (arr.every((ship: HTMLElement) => ship.style.display === \"none\"))\n    return true;\n  return false;\n}\n\nfunction CreateGameBoard(name: Player) {\n  printID();\n  const leftSide = Array.from(Array(100).keys());\n  const boardInt =\n    name === \"player2\" ? leftSide.map((grid) => grid + 100) : leftSide;\n  const board = boardInt.map((arg) => arg.toString());\n  const fleet = {\n    carrier: CreateShip(5, \"carrier\"),\n    battleship: CreateShip(4, \"battleship\"),\n    cruiser: CreateShip(3, \"cruiser\"),\n    submarine: CreateShip(3, \"submarine\"),\n    destroyer: CreateShip(2, \"destroyer\"),\n  };\n  const fleetPlaced: number[] = [];\n  return {\n    name,\n    fleet,\n    fleetPlaced,\n    board,\n    placeFleet(coordinates: number[], shipName: string): boolean {\n      const count = 10 * coordinates.length;\n      if (\n        !rotated &&\n        coordinates.some((co) => co % 10 === 0 && co !== coordinates[0])\n      ) {\n        return false;\n      }\n      if (rotated && coordinates[0] + count - 10 > 100) return false;\n\n      if (coordinates.some((co) => Number.isNaN(parseInt(board[co], 10))))\n        return false;\n\n      if (\n        coordinates.some(\n          (co) => document.getElementById(co.toString())?.innerText === \"•\"\n        )\n      )\n        return false;\n\n      coordinates.forEach((co) => {\n        board[co] = shipName;\n      });\n      fleetPlaced.push(coordinates.length);\n      return true;\n    },\n    gameOver(): boolean {\n      if (Object.values(fleet).every(({ isSunk }) => isSunk())) return true;\n      return false;\n    },\n  };\n}\n\nconst player1 = CreateGameBoard(\"player1\");\nconst player2 = CreateGameBoard(\"player2\");\n\nfunction rotateShip() {\n  if (!container) return;\n  const ships = container?.getElementsByClassName(\"warship\");\n  const arr = Array.prototype.slice.call(ships);\n  container.style.flexDirection =\n    container.style.flexDirection === \"row\" ? \"column\" : \"row\";\n  arr.forEach((ship: HTMLElement) => {\n    if (ship.className === `warship ${ship.id}`) {\n      ship.classList.remove(ship.id);\n      ship.classList.add(`${ship.id}Rotated`);\n      ship.style.margin = \"10px\";\n      rotated = true;\n    } else {\n      ship.classList.remove(`${ship.id}Rotated`);\n      ship.classList.add(ship.id);\n      rotated = false;\n    }\n  });\n}\n\nfunction placeFleetRandom(player: any) {\n  const fleet = { ...player.fleet };\n  while (player.fleetPlaced.length !== 5) {\n    const first: any = Object.values(fleet)[0];\n    if (!first) return;\n    const random = Math.floor(Math.random() * 100);\n    if (random < 51) rotated = true;\n    if (\n      player.placeFleet(\n        getCoordinates(random.toString(), first.getHP()),\n        first.getName()\n      )\n    ) {\n      delete fleet[Object.keys(fleet)[0]];\n    }\n    rotated = false;\n  }\n}\n\nfunction gameStart() {\n  if (!checkReady()) return;\n  const shipContainer = document.getElementById(\"shipContainer\");\n  const player2Board = document.getElementById(\"player2Board\");\n  if (!shipContainer || !player2Board) return;\n  shipContainer.style.display = \"none\";\n  player2Board.style.display = \"flex\";\n  placeFleetRandom(player2);\n  changeUI(\"Game starts\");\n}\n\nfunction markAttack(id: string, player: any, grid: number) {\n  const gridAttackedDOM = document.getElementById(id);\n  if (!gridAttackedDOM) return;\n  gridAttackedDOM.innerText = \"•\";\n  gridAttackedDOM.style.color = Number.isNaN(parseInt(player.board[grid], 10))\n    ? \"red\"\n    : \"white\";\n}\n\nfunction changeLife(isSunk: boolean, { name }: { name: string }) {\n  let life = <HTMLElement>(\n    document.getElementById(`${name}SunkShip`)?.firstElementChild\n  );\n  while (life?.style.color === \"black\")\n    life = <HTMLElement>life?.nextElementSibling;\n  if (isSunk) {\n    life.style.color = \"black\";\n  }\n}\n\nfunction checkSunk(player: any, shipName: string): boolean {\n  if (player.fleet[shipName].isSunk()) return true;\n  return false;\n}\n\nfunction checkGameOver(player: any) {\n  const enemy = player.name === \"player1\" ? player2 : player1;\n  if (player.gameOver()) {\n    changeUI(`${enemy.name} wins!`);\n    document.getElementById(\"content\").style.display = \"none\";\n    document.getElementById(\"restart\").style.display = \"block\";\n  }\n}\n\nfunction displayBattleUI(player: any, grid: number) {\n  if (checkSunk(player, player.board[grid]))\n    changeUI(`${player.name}'s ${[player.board[grid]]} sinks`);\n  else changeUI(`${player.name}'s ${[player.board[grid]]} gets hit`);\n}\n\nfunction checkHit(player: any, grid: number) {\n  if (Number.isNaN(parseInt(player.board[grid], 10))) {\n    player.fleet[player.board[grid]].hit();\n    displayBattleUI(player, grid);\n    changeLife(checkSunk(player, player.board[grid]), player);\n    player.board[grid] = \"-3\";\n    checkGameOver(player);\n  } else {\n    player.board[grid] = \"-2\";\n  }\n  return player.board[grid];\n}\n\nfunction takeTurn(\n  player: Record<string, unknown>,\n  coordinate: string\n): boolean {\n  if (document.getElementById(coordinate)?.innerText === \"•\") return false;\n  const enemy = player.name === \"player1\" ? player2 : player1;\n  const grid =\n    player.name === \"player1\"\n      ? parseInt(coordinate, 10) - 100\n      : parseInt(coordinate, 10);\n\n  markAttack(coordinate, enemy, grid);\n\n  if (player === player2) {\n    const moves = { index: 0, result: 0, ship: \"\" };\n    moves.ship = enemy.board[grid];\n    moves.result = checkHit(enemy, grid);\n    moves.index = grid;\n    previousMoves.push(moves);\n  } else {\n    checkHit(enemy, grid);\n  }\n  return true;\n}\n\nfunction convertEvent(e: Event) {\n  const target = e.target as HTMLElement;\n  const coordinates = parseInt(target.id, 10);\n  return coordinates.toString();\n}\n\nfunction getProbability(board: string[], shipLeft: any): number[] {\n  const probability = [];\n  const player3 = CreateGameBoard(\"player3\");\n  player3.board = [...board];\n  for (let i = 0; i < board.length; i += 1) {\n    let oddsHorizontal = 0;\n    for (let x = 0; x < shipLeft.length; x += 1) {\n      if (\n        player3.placeFleet(getCoordinates(board[i], shipLeft[x].getHP()), \"2\")\n      )\n        oddsHorizontal += 1;\n    }\n    if (document.getElementById(i.toString())?.innerText === \"•\")\n      oddsHorizontal = 0;\n    probability.push(oddsHorizontal);\n  }\n  rotated = true;\n  for (let i = 0; i < board.length; i += 1) {\n    let oddsVertical = 0;\n    for (let x = 0; x < shipLeft.length; x += 1) {\n      if (\n        player3.placeFleet(getCoordinates(board[i], shipLeft[x].getHP()), \"2\")\n      )\n        oddsVertical += 1;\n    }\n    if (document.getElementById(i.toString())?.innerText === \"•\")\n      oddsVertical = 0;\n    probability[i] += oddsVertical;\n  }\n  rotated = false;\n  return probability;\n}\n\nfunction spreadHits(index: number, board: string[]): any {\n  const nearbySpaces = board.reduce(\n    (a, e, i) =>\n      e === (index - 10).toString() ||\n      e === (index + 10).toString() ||\n      e === (index - 1).toString() ||\n      e === (index + 1).toString()\n        ? a.concat(i.toString())\n        : a,\n    []\n  );\n  const random = Math.floor(Math.random() * nearbySpaces.length);\n  if (nearbySpaces.length === 0) {\n    return null;\n  }\n  return nearbySpaces[random];\n}\n\nfunction focusHits(board: string[], shipName: string) {\n  const damagedShip = board.findIndex((arg) => arg === shipName);\n  return damagedShip;\n}\n\nfunction getLastMove(index: number) {\n  if (!previousMoves[previousMoves.length - index]) return null;\n  return previousMoves[previousMoves.length - index];\n}\n\nlet hunt = false;\nlet shipsFound: string[] = [];\nlet shipsLeft = Object.keys(player1.fleet).map((arg) => player1.fleet[arg]);\n\nfunction AIPlay(): string {\n  let move;\n  const freeSpots = player1.board.map((arg) => {\n    if (arg === \"-2\" || arg === \"-3\") arg = null;\n    else arg = player1.board.indexOf(arg).toString();\n    return arg;\n  });\n\n  if (player1.fleet[getLastMove(1)?.ship]?.isSunk()) {\n    const indexLeft = shipsLeft\n      .map((arg) => arg.getName())\n      .indexOf(getLastMove(1)?.ship);\n    const indexFound = shipsFound.indexOf(getLastMove(1).ship);\n    shipsLeft.splice(indexLeft, 1);\n    shipsFound.splice(indexFound, 1);\n    if (shipsFound.length === 0) {\n      hunt = false;\n      getLastMove(1).result = \"-2\";\n    }\n  }\n\n  const highestSpots = Math.max(...getProbability(freeSpots, shipsLeft));\n  const highestProbability: number[] = getProbability(\n    freeSpots,\n    shipsLeft\n  ).reduce((a, e, i) => (e === highestSpots ? a.concat(i) : a), []);\n  const random = Math.floor(Math.random() * highestProbability.length);\n\n  if (!hunt) {\n    move = highestProbability[random];\n  }\n\n  if (getLastMove(1)?.result === \"-3\") {\n    hunt = true;\n    if (shipsFound.every((ship) => ship !== getLastMove(1).ship))\n      shipsFound.push(getLastMove(1).ship);\n    move = spreadHits(getLastMove(1).index, freeSpots);\n  }\n\n  if (hunt && getLastMove(1)?.result === \"-2\") {\n    move = spreadHits(getLastMove(2).index, freeSpots);\n  }\n  if (\n    hunt &&\n    getLastMove(1)?.result === \"-2\" &&\n    getLastMove(2)?.result === \"-2\"\n  ) {\n    move = spreadHits(getLastMove(3).index, freeSpots);\n  }\n  if (\n    hunt &&\n    getLastMove(1)?.result === \"-2\" &&\n    getLastMove(2)?.result === \"-2\" &&\n    getLastMove(3)?.result === \"-2\"\n  ) {\n    move = spreadHits(getLastMove(4).index, freeSpots);\n  }\n\n  if (\n    hunt &&\n    getLastMove(1)?.result === \"-3\" &&\n    getLastMove(2)?.result === \"-2\"\n  ) {\n    move = spreadHits(getLastMove(1).index, freeSpots);\n  }\n  if (\n    hunt &&\n    getLastMove(1)?.result === \"-2\" &&\n    getLastMove(2)?.result === \"-3\" &&\n    getLastMove(3)?.result === \"-3\"\n  )\n    move = focusHits(player1.board, getLastMove(2).ship);\n  if (\n    hunt &&\n    getLastMove(1)?.result === \"-3\" &&\n    getLastMove(2)?.result === \"-3\"\n  )\n    move = focusHits(player1.board, getLastMove(1).ship);\n\n  if (move === -1) move = spreadHits(getLastMove(2), freeSpots);\n\n  if (\n    shipsFound.length > 0 &&\n    getLastMove(1)?.result === \"-2\" &&\n    getLastMove(2)?.result === \"-2\" &&\n    getLastMove(3)?.result === \"-2\"\n  )\n    move = focusHits(player1.board, shipsFound[0]);\n\n  if (!move || move === -1) move = highestProbability[random];\n\n  return move.toString();\n}\n\nfunction playGame(e: Event) {\n  if (takeTurn(player1, convertEvent(e))) takeTurn(player2, AIPlay());\n}\n\nfunction restart() {\n  for (let i = 0; i < player1.board.length; i += 1) {\n    player1.board[i] = i.toString();\n    player2.board[i] = (i + 100).toString();\n  }\n  Object.values(player1.fleet).forEach((ship) => ship.fullHeal());\n  Object.values(player2.fleet).forEach((ship) => ship.fullHeal());\n  player1.fleetPlaced = [];\n  player2.fleetPlaced = [];\n  hunt = false;\n  shipsFound = [];\n  shipsLeft = Object.keys(player1.fleet).map((arg) => player1.fleet[arg]);\n\n  document.querySelectorAll(\".grid\").forEach((grid: HTMLElement) => {\n    grid.className = \"grid\";\n    grid.style.color = \"none\";\n    grid.innerText = \"\";\n  });\n  document.querySelectorAll(\".warship\").forEach((ship: HTMLElement) => {\n    ship.style.display = \"block\";\n  });\n  document.querySelectorAll(\".life\").forEach((life: HTMLElement) => {\n    life.style.color = \"red\";\n  });\n\n  if (document.getElementById(\"shipContainer\").style.flexDirection === \"row\") {\n    rotateShip();\n  }\n  changeUI(\"Place your ships\");\n  document.getElementById(\"content\").style.display = \"flex\";\n  document.getElementById(\"shipContainer\").style.display = \"flex\";\n  document.getElementById(\"player2Board\").style.display = \"none\";\n  document.getElementById(\"restart\").style.display = \"none\";\n}\n\nlet shipID = \"\";\nlet currentPosition = \"\";\n\nfunction dragstart(e: DragEvent) {\n  const target = e.target as HTMLElement;\n  shipID = target.id;\n  e.dataTransfer?.setData(\"text\", target?.className);\n}\n\nfunction dropShip(e: DragEvent) {\n  const boardTarget = e.currentTarget as HTMLElement;\n  currentPosition = boardTarget.id;\n\n  const target = e.target as HTMLElement;\n  const data = e.dataTransfer?.getData(\"text\");\n  target.className += ` ${data}`;\n}\n\nfunction removeShip(e: DragEvent) {\n  if (currentPosition !== \"player1MainBoard\") return;\n  const target = e.target as HTMLElement;\n  target.style.display = \"none\";\n  currentPosition = \"\";\n}\n\nfunction addListeners(): void {\n  const warships = document.querySelectorAll<HTMLElement>(\".warship\");\n  const playerBoard = document.querySelector<HTMLElement>(\".mainBoard\");\n  const AIBoard = document.getElementById(\"player2Board\");\n  const AIGrids = AIBoard?.querySelectorAll(\".grid\");\n  const rotateButton = document.querySelector(\"button\");\n  const restartButton = document.getElementById(\"restart\");\n  let validMove = true;\n\n  warships.forEach((warship) =>\n    warship.addEventListener(\"dragstart\", dragstart)\n  );\n  playerBoard?.addEventListener(\"dragover\", (e) => e.preventDefault());\n  playerBoard?.addEventListener(\"drop\", (e) => {\n    const target = e.target as HTMLElement;\n    const move = player1.placeFleet(\n      getCoordinates(target.id, player1.fleet[shipID]?.getHP()),\n      shipID\n    );\n    if (!move) {\n      validMove = false;\n      return;\n    }\n    dropShip(e);\n    validMove = true;\n  });\n  warships.forEach((warship) =>\n    warship.addEventListener(\"dragend\", (e) => {\n      if (!validMove) return;\n      removeShip(e);\n      gameStart();\n    })\n  );\n  AIGrids?.forEach((grid) =>\n    grid.addEventListener(\"click\", (e) => playGame(e))\n  );\n  rotateButton?.addEventListener(\"click\", rotateShip);\n  restartButton?.addEventListener(\"click\", restart);\n}\n\naddListeners();\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[575]();\n"],"sourceRoot":""}