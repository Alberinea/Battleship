{"version":3,"sources":["webpack://battleship/./src/index.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["type Player = \"player1\" | \"player2\";\n\nconst container = document.getElementById(\"shipContainer\");\n\nlet rotated = false;\n\nfunction CreateShip(length: number) {\n  const HP: number[] = [];\n  let hitCount = 0;\n  for (let i = 1; i < length + 1; i += 1) {\n    HP.push(i);\n  }\n  return {\n    HP,\n    getLength(): number {\n      return length;\n    },\n    getHitCount(): number {\n      return hitCount;\n    },\n    hit(hit: number): void {\n      if (hitCount === length) return;\n      HP[hit] = 0;\n      hitCount += 1;\n    },\n    isSunk(): boolean {\n      if (!HP.some((hit) => hit > 1)) return true;\n      return false;\n    },\n  };\n}\n\nfunction getCoordinates(id: string, length: number) {\n  const coordinates = [];\n  for (let i = 0; i < length; i += 1) {\n    coordinates.push(parseInt(id, 10) + i);\n  }\n  return coordinates;\n}\n\nfunction printID(): void {\n  const grids = document.querySelectorAll(\".grid\");\n  for (let i = 0; i < grids.length; i += 1) {\n    grids[i].id = `${i}`;\n  }\n}\n\nfunction checkReady() {\n  const ships = container?.querySelectorAll(\".warship\");\n  const arr = Array.prototype.slice.call(ships);\n  if (arr.every(({ style: { display } }) => display === \"none\")) return true;\n  return false;\n}\n\nfunction CreateGameBoard(name: Player) {\n  printID();\n  const leftSide = Array.from(Array(100).keys());\n  const board =\n    name === \"player2\" ? leftSide.map((grid) => grid + 100) : leftSide;\n  const fleet = {\n    carrier: CreateShip(5),\n    battleship: CreateShip(4),\n    cruiser: CreateShip(3),\n    submarine: CreateShip(3),\n    destroyer: CreateShip(2),\n  };\n  const fleetPlaced: number[] = [];\n  return {\n    name,\n    fleet,\n    fleetPlaced,\n    board,\n    placeFleet(coordinates: number[]): boolean {\n      const count = 10 * coordinates.length;\n      if (\n        !rotated &&\n        coordinates.some((co) => co % 10 === 0 && co !== coordinates[0])\n      )\n        return false;\n      if (rotated && coordinates[0] + count - 10 > 100) return false;\n      if (\n        board[coordinates[0]] === -1 ||\n        board[coordinates[coordinates.length - 1]] === -1\n      )\n        return false;\n      if (!rotated) {\n        for (\n          let i = coordinates[0];\n          i < coordinates[coordinates.length - 1] + 1;\n          i += 1\n        ) {\n          board[i] = -1;\n        }\n      }\n      if (rotated) {\n        for (let i = coordinates[0]; i < coordinates[0] + count; i += 10) {\n          board[i] = -1;\n        }\n      }\n      fleetPlaced.push(coordinates.length);\n      console.log(board);\n      return true;\n    },\n    checkGameOver(): boolean {\n      if (Object.values(fleet).every(({ isSunk }) => isSunk())) return true;\n      return false;\n    },\n  };\n}\n\nconst player1 = CreateGameBoard(\"player1\");\nconst player2 = CreateGameBoard(\"player2\");\n\nfunction rotateShip() {\n  if (!container) return;\n  const ships = container?.getElementsByClassName(\"warship\");\n  const arr = Array.prototype.slice.call(ships);\n  container.style.flexDirection =\n    container.style.flexDirection === \"row\" ? \"column\" : \"row\";\n  arr.forEach((ship: HTMLElement) => {\n    if (ship.className === `warship ${ship.id}`) {\n      ship.classList.remove(ship.id);\n      ship.classList.add(`${ship.id}Rotated`);\n      rotated = true;\n    } else {\n      ship.classList.remove(`${ship.id}Rotated`);\n      ship.classList.add(ship.id);\n      rotated = false;\n    }\n  });\n}\n\nfunction placeFleetRandom(player: Record<string, unknown>) {\n  console.log(player.board);\n  console.log(player.fleet);\n}\n\nfunction gameStart() {\n  if (!checkReady()) return;\n  const shipContainer = document.getElementById(\"shipContainer\");\n  const player2Board = document.getElementById(\"player2Board\");\n  if (!shipContainer || !player2Board) return;\n  shipContainer.style.display = \"none\";\n  player2Board.style.display = \"flex\";\n  placeFleetRandom(player2);\n}\n\nfunction markAttack(id: string) {\n  const gridAttackedDOM = document.getElementById(id);\n  if (!gridAttackedDOM) return;\n  gridAttackedDOM.innerText = \"•\";\n  gridAttackedDOM.dataset.id = id;\n  gridAttackedDOM.style.color =\n    gridAttackedDOM.dataset.id === \"-3\" ? \"red\" : \"white\";\n}\n\nfunction takeTurn(player: Record<string, unknown>, e: Event) {\n  if (!checkReady()) return;\n  const target = e.target as HTMLElement;\n  const enemy = player.name === \"player1\" ? player2 : player1;\n  const gridAttacked = enemy.board.findIndex(\n    (arg) => arg === parseInt(target.id, 10)\n  );\n  enemy.board[gridAttacked] = enemy.board[gridAttacked] === -1 ? -3 : -2;\n  markAttack(target.id);\n}\n\nlet shipID = \"\";\nlet currentPosition = \"\";\n\nfunction dragstart(e: DragEvent) {\n  const target = e.target as HTMLElement;\n  shipID = target.id;\n  e.dataTransfer?.setData(\"text\", target?.className);\n}\n\nfunction dropShip(e: DragEvent) {\n  const boardTarget = e.currentTarget as HTMLElement;\n  currentPosition = boardTarget.id;\n\n  const target = e.target as HTMLElement;\n  const data = e.dataTransfer?.getData(\"text\");\n  target.className += ` ${data}`;\n}\n\nfunction removeShip(e: DragEvent) {\n  if (currentPosition !== \"player1MainBoard\") return;\n  const target = e.target as HTMLElement;\n  target.style.display = \"none\";\n  currentPosition = \"\";\n}\n\nfunction addListeners(): void {\n  const warships = document.querySelectorAll<HTMLElement>(\".warship\");\n  const playerBoard = document.querySelector<HTMLElement>(\".mainBoard\");\n  const AIBoard = document.getElementById(\"player2Board\");\n  const AIGrids = AIBoard?.querySelectorAll(\".grid\");\n  const rotateButton = document.querySelector(\"button\");\n  let validMove = true;\n\n  warships.forEach((warship) =>\n    warship.addEventListener(\"dragstart\", dragstart)\n  );\n  playerBoard?.addEventListener(\"dragover\", (e) => e.preventDefault());\n  playerBoard?.addEventListener(\"drop\", (e) => {\n    const target = e.target as HTMLElement;\n    const move = player1.placeFleet(\n      getCoordinates(target.id, player1.fleet[shipID]?.getLength())\n    );\n    if (!move) {\n      validMove = false;\n      return;\n    }\n    player1.placeFleet(\n      getCoordinates(target.id, player1.fleet[shipID]?.getLength())\n    );\n    dropShip(e);\n    validMove = true;\n  });\n  warships.forEach((warship) =>\n    warship.addEventListener(\"dragend\", (e) => {\n      if (!validMove) return;\n      removeShip(e);\n      gameStart();\n    })\n  );\n  AIGrids?.forEach((grid) =>\n    grid.addEventListener(\"click\", (e) => takeTurn(player1, e))\n  );\n  rotateButton?.addEventListener(\"click\", rotateShip);\n}\n\naddListeners();\n"],"sourceRoot":""}